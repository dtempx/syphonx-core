execute
  each action
    dispatch(action)
        select
        break
        click
        repeat
        snooze
        transform
        waitfor
        yield

select
    select.active
        select.when
            select.pivot -> selectResolvePivot (creates a context, uses keypath)
            select.union -> selectResolveUnion (does not create a context, uses keypath)
            select.$ -> selectResolveSelector (creates parent/child contexts, uses keypath)
            select.value -> selectResolveValue (no context, no keypath)

selectResolveSelector(select, item, context)
    query(select, context)
        if select.type !== "object" -> merge
        if select.type === "object" -> select(select.select -> subcontext) -> merge

query(select, context)  ...context passthru only
    resolveQuery(context)
        mergeQueryResult

resolveQuery(..., context)
    case selector
        when "." -> context.nodes
        when ".." -> context.parent.nodes
        when "{window}" -> $(window)
        when "{document}" -> $(document)
        else -> evaluate(selector), resolveQueryNodes(context.nodes)
    resolveQueryOps()  (no context)

resolveQueryOps
    case operator
        when "blank" ->
        when "cut" ->
        when "extract" ->
        when "filter" ->
        when "html" ->
        when "map" ->
        when "nonblank" ->
        when "replace" ->
        when "replaceHTML" ->
        when "replaceText" ->
        when "replaceWith" ->
        when "scrollBottom" ->
        when "size" ->
        when "split" ->
        when "text" ->
        else -> dispatch to jquery

selectResolveSelector
    query
        resolveQuery
            formatResult
            resolveQueryOps
                formatResult
